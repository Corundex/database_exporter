name: Build and Release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name"
        required: true
      release_name:
        description: "Release name"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.2"

      - name: Build project
        run: go build -o database_exporter

      - name: Archive binary
        run: tar -czvf database_exporter.tar.gz config database_exporter database_exporter.yml LICENSE VERSION

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: database_exporter_tarball
          path: database_exporter.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set release name
        id: set_release_name
        run: |
          if [ -n "${{ github.event.inputs.release_name }}" ]; then
            echo "RELEASE_NAME=${{ github.event.inputs.release_name }}" >> $GITHUB_ENV
          else
            echo "RELEASE_NAME=Release ${{ github.ref }}" >> $GITHUB_ENV
          fi

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: database_exporter_tarball
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref }}
          release_name: ${{ env.RELEASE_NAME }}
          body: |
            Release notes for version ${{ github.ref }}.
          draft: false
          prerelease: false

      - name: Upload Custom Tarball
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: database_exporter.tar.gz
          asset_name: database_exporter.tar.gz
          asset_content_type: application/gzip

  docker:
    runs-on: ubuntu-latest
    needs: release
    environment: secrets
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.2"

      - name: Build
        run: go build -o database_exporter

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: corundex/database_exporter:latest,corundex/database_exporter:${{ github.ref_name }}
